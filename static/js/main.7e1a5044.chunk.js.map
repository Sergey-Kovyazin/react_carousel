{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","translateValue","handlerButton","event","props","step","itemWidth","images","infinite","frameSize","position","maxSlide","length","currentTarget","name","setState","this","animationDuration","className","style","width","height","transform","transitionDuration","map","image","index","src","alt","toString","type","onClick","React","Component","App","framesize","action","method","value","onChange","max","min","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e1a5044.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  translateValue: number;\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    translateValue: 0,\n  };\n\n  handlerButton = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      step,\n      itemWidth,\n      images,\n      infinite,\n      frameSize,\n    } = this.props;\n\n    const { translateValue } = this.state;\n    let position = translateValue;\n    const maxSlide = -(images.length - frameSize) * itemWidth;\n\n    if (event.currentTarget.name === 'Previous') {\n      position += itemWidth * step;\n\n      if (position >= itemWidth * step && infinite) {\n        this.setState({ translateValue: maxSlide });\n\n        return;\n      }\n\n      this.setState({ translateValue: position >= 0 ? 0 : position });\n    }\n\n    if (event.currentTarget.name === 'Next') {\n      position -= itemWidth * step;\n\n      if (position <= maxSlide - (itemWidth * step) && infinite) {\n        this.setState({ translateValue: 0 });\n\n        return;\n      }\n\n      this.setState({\n        translateValue: position <= maxSlide\n          ? maxSlide\n          : position,\n      });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.props;\n    const { translateValue } = this.state;\n\n    return (\n      <div className=\"carousel\">\n        <div\n          className=\"carousel__container\"\n          style={{\n            width: `${itemWidth * frameSize}px`,\n            height: `${itemWidth + 22}px`,\n          }}\n        >\n          <ul\n            className=\"carousel__list\"\n            style={{\n              transform: `translateX(${translateValue}px)`,\n              transitionDuration: `${animationDuration}ms`,\n            }}\n          >\n            {images.map((image, index) => {\n              return (\n                <li\n                  key={image}\n                  className=\"carousel__item\"\n                >\n                  <img\n                    src={image}\n                    alt={index.toString()}\n                    style={{\n                      width: `${itemWidth}px`,\n                    }}\n                  />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n        <div className=\"carousel__buttons\">\n          <button\n            type=\"button\"\n            className=\"carousel__button\"\n            name=\"Previous\"\n            onClick={this.handlerButton}\n          >\n            &lt;\n            Prev\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"carousel__button\"\n            name=\"Next\"\n            onClick={this.handlerButton}\n            data-cy=\"Next\"\n          >\n            Next\n            &gt;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[],\n  framesize: number,\n  itemWidth: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    framesize: 3,\n    itemWidth: 130,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      framesize,\n      itemWidth,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\" data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <form\n          className=\"app__form form\"\n          action=\"#\"\n          method=\"get\"\n        >\n          <div className=\"form__field\">\n            <label className=\"form__label\">\n              ItemWidth:\n              <input\n                className=\"form__input\"\n                type=\"number\"\n                value={itemWidth}\n                onChange={(event) => {\n                  this.setState({ itemWidth: +event.currentTarget.value });\n                }}\n              />\n            </label>\n          </div>\n\n          <div className=\"form__field\">\n            <label className=\"form__label\">\n              FrameSize:\n              <input\n                className=\"form__input\"\n                type=\"number\"\n                value={framesize}\n                max={images.length}\n                min=\"1\"\n                onChange={(event) => {\n                  this.setState({ framesize: +event.currentTarget.value });\n                }}\n              />\n            </label>\n          </div>\n\n          <div className=\"form__field\">\n            <label className=\"form__label\">\n              Step:\n              <input\n                className=\"form__input\"\n                type=\"number\"\n                value={step}\n                min=\"1\"\n                onChange={(event) => {\n                  this.setState({ step: +event.currentTarget.value });\n                }}\n              />\n            </label>\n          </div>\n\n          <div className=\"form__field\">\n            <label className=\"form__label\">\n              AnimationDuration:\n              <input\n                className=\"form__input\"\n                type=\"number\"\n                min=\"0\"\n                value={animationDuration}\n                onChange={(event) => {\n                  this.setState(\n                    { animationDuration: +event.currentTarget.value },\n                  );\n                }}\n              />\n            </label>\n          </div>\n\n          <div className=\"form__field\">\n            <label className=\"form__label\">\n              Infinite:\n              <input\n                className=\"form__input\"\n                type=\"checkbox\"\n                checked={infinite}\n                onChange={(event) => {\n                  this.setState({ infinite: event.currentTarget.checked });\n                }}\n              />\n            </label>\n          </div>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={framesize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}