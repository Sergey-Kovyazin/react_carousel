{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","translateValue","handlerButton","event","props","step","itemWidth","images","infinite","frameSize","position","maxSlide","length","currentTarget","name","setState","this","animationDuration","className","style","width","transform","transitionDuration","map","image","index","src","alt","toString","type","onClick","React","Component","App","framesize","action","method","value","onChange","e","max","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7f5af23.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  translateValue: number;\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    translateValue: 0,\n  };\n\n  handlerButton = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      step,\n      itemWidth,\n      images,\n      infinite,\n      frameSize,\n    } = this.props;\n\n    const { translateValue } = this.state;\n    let position = translateValue;\n    const maxSlide = -(images.length - frameSize) * itemWidth;\n\n    if (event.currentTarget.name === 'Previous') {\n      position += itemWidth * step;\n\n      if (position >= itemWidth * step && infinite) {\n        this.setState({ translateValue: maxSlide });\n\n        return;\n      }\n\n      this.setState({ translateValue: position >= 0 ? 0 : position });\n    }\n\n    if (event.currentTarget.name === 'Next') {\n      position -= itemWidth * step;\n\n      if (position <= maxSlide - (itemWidth * step) && infinite) {\n        this.setState({ translateValue: 0 });\n\n        return;\n      }\n\n      this.setState({\n        translateValue: position <= maxSlide\n          ? maxSlide\n          : position,\n      });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.props;\n    const { translateValue } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"Carousel__container\"\n          style={{\n            width: `${itemWidth * frameSize}px`,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${translateValue}px)`,\n              transitionDuration: `${animationDuration}ms`,\n            }}\n          >\n            {images.map((image, index) => {\n              return (\n                <li\n                  key={image}\n                  className=\"Carousel__item\"\n                >\n                  <img\n                    src={image}\n                    alt={index.toString()}\n                    className=\"Carousel__smile\"\n                  />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            className=\"Carousel__button Carousel__button-prev\"\n            name=\"Previous\"\n            onClick={this.handlerButton}\n          >\n            &lt;\n            Prev\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"Carousel__button Carousel__button-next\"\n            name=\"Next\"\n            onClick={this.handlerButton}\n            data-cy=\"Next\"\n          >\n            Next\n            &gt;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[],\n  framesize: number,\n  itemWidth: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    framesize: 3,\n    itemWidth: 130,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      framesize,\n      itemWidth,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"App__title\" data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <form\n          className=\"App__form Form\"\n          action=\"#\"\n          method=\"get\"\n        >\n          <div className=\"Form__field\">\n            <label className=\"Form__label\">\n              ItemWidth:\n              <input\n                className=\"Form__input\"\n                type=\"number\"\n                value={itemWidth}\n                onChange={\n                  (e) => {\n                    this.setState({ itemWidth: +e.currentTarget.value });\n                  }\n                }\n              />\n            </label>\n          </div>\n\n          <div className=\"Form__field\">\n            <label className=\"Form__label\">\n              FrameSize:\n              <input\n                className=\"Form__input\"\n                type=\"number\"\n                value={framesize}\n                max={images.length}\n                onChange={(event) => {\n                  this.setState({ framesize: +event.currentTarget.value });\n                }}\n              />\n            </label>\n          </div>\n\n          <div className=\"Form__field\">\n            <label className=\"Form__label\">\n              Step:\n              <input\n                className=\"Form__input\"\n                type=\"number\"\n                value={step}\n                onChange={(event) => {\n                  this.setState({ step: +event.currentTarget.value });\n                }}\n              />\n            </label>\n          </div>\n\n          <div className=\"Form__field\">\n            <label className=\"Form__label\">\n              AnimationDuration:\n              <input\n                className=\"Form__input\"\n                type=\"number\"\n                value={animationDuration}\n                onChange={(event) => {\n                  this.setState(\n                    { animationDuration: +event.currentTarget.value },\n                  );\n                }}\n              />\n            </label>\n          </div>\n\n          <div className=\"Form__field\">\n            <label className=\"Form__label\">\n              Infinite:\n              <input\n                className=\"Form__input\"\n                type=\"checkbox\"\n                checked={infinite}\n                onChange={(event) => {\n                  this.setState(\n                    { infinite: event.currentTarget.checked },\n                  );\n                }}\n              />\n            </label>\n          </div>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={framesize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}